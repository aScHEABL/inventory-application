<%# views/shop.ejs %>

<% extend('layout') %>

<script defer>
    document.addEventListener("DOMContentLoaded", () => {
        const genders_array = JSON.parse('<%- JSON.stringify(genders_array) %>');
        const maleCategories_array = JSON.parse('<%- JSON.stringify(maleCategories_array) %>');
        const femaleCategories_array = JSON.parse('<%- JSON.stringify(femaleCategories_array) %>');
        const maleClothes_array = <%- JSON.stringify(maleClothes_array) %>;
        const femaleClothes_array = <%- JSON.stringify(femaleClothes_array) %>;
        // console.log(maleClothes_array);
        
        const genderTabsWrapper = document.querySelector("#gender-tabs-wrapper");
        const categoryTabsWrapper = document.querySelector("#category-tabs-wrapper");
        const mainWrapper = document.querySelector("#main-wrapper");
        const genderTabs = Array.from(genderTabsWrapper.getElementsByTagName("a"));
        
        // First find the tab with tab-active class, then store its index in the array.
        let activeGenderTabIndex = genderTabs.findIndex((domElement) => domElement.classList.contains("tab-active"));

        genderTabs.forEach((domElement, index) => {
            domElement.addEventListener("click", () => {
                // If the tab is already selected, then do nothing;
                // If user click non-selected tab, the current
                // selected tab is deselected, then the selected tab is assigned with the user selected tab.
               if (index === activeGenderTabIndex) {
                    return;
               } else if (index !== activeGenderTabIndex) {
                    genderTabs[activeGenderTabIndex].classList.toggle("tab-active");
                    activeGenderTabIndex = index;
                    genderTabs[index].classList.toggle("tab-active");

                    (index === 0) ? populateCategories(0) : populateCategories(1);
               }
            })
        })

        function capitalizeFirstLetter(string) { 
            return string.charAt(0).toUpperCase() + string.slice(1);
        }

        function populateCategories(genderIndex) {
            // When user clicks new gender tab, all of previous rendered <a> tags and their events need to be removed.
            // Then re-render again based on the new gender.
            if (!categoryTabsWrapper.hasChildNodes) {
                return;
            } else if (categoryTabsWrapper.hasChildNodes) {
                const allAnchorElements = Array.from(categoryTabsWrapper.getElementsByTagName("a"));
                allAnchorElements.forEach((item, index) => {
                    item.removeEventListener("click", handleClickCallback);
                })
            }
            categoryTabsWrapper.replaceChildren();

            // Render categories based on the gender index.
            const categories_array = (genderIndex === 0) ? maleCategories_array : femaleCategories_array;
            const clothes_array = (genderIndex === 0) ? maleClothes_array : femaleClothes_array;
            const categories = categories_array.map((item, index) => {
                const aElement = document.createElement("a");
                index === 0 ? aElement.classList.toggle("tab-active") : null;
                populateProduct(0);
                aElement.classList.toggle("tab");
                aElement.textContent = capitalizeFirstLetter(item.name);
                return aElement;
            })
            categoryTabsWrapper.replaceChildren(...categories);
            
            // Change the active category tab when the user clicks on the tab.
            const categoryTabs = Array.from(categoryTabsWrapper.getElementsByTagName("a"));
            let activeCategoryTabIndex = categoryTabs.findIndex((domElement) => domElement.classList.contains("tab-active"));
            categoryTabs.forEach((domElement, index) => {
                domElement.addEventListener("click", () => handleClickCallback(index));
            })
            
            function handleClickCallback(index) {
                if (index === activeCategoryTabIndex) {
                    return;
                } else if (index !== activeCategoryTabIndex) {
                    categoryTabs[activeCategoryTabIndex].classList.toggle("tab-active");
                    activeCategoryTabIndex = index;
                    categoryTabs[index].classList.toggle("tab-active");
                }
            }

            function populateProduct(activeTabIndex) {
                clothes_array[activeTabIndex].forEach((item, index) => {
                    const cardWrapper = document.createElement("div");
                    const figure = document.createElement("figure");
                    const img = document.createElement("img");
                    const cardBodyDiv = document.createElement("div");
                    const h2 = document.createElement("h2");
                    const p = document.createElement("p");
                    const cardActionDiv = document.createElement("div");
                    const cardButton = document.createElement("button");

                    cardWrapper.classList.add("card", "w-96", "bg-base-100", "shadow-xl");
                    img.setAttribute("src", item.imageURL);
                    cardBodyDiv.classList.add("card-body");
                    h2.classList.add("card-title");
                    cardActionDiv.classList.add("card-actions", "justify-end");
                    cardButton.classList.add("btn", "btn-primary");

                    mainWrapper.append(cardWrapper);
                    cardWrapper.append(figure, cardBodyDiv);
                    figure.append(img);
                    cardBodyDiv.append(h2, p, cardActionDiv);
                    cardActionDiv.append(cardButton);
                });
            }
            
        }
        
        // Append male categories on page load. 0 === "male", 1 === "female"
        populateCategories(0);
    })
</script>

<% function capitalizeFirstLetter(string) { %>
<%    return string.charAt(0).toUpperCase() + string.slice(1); %>
<% } %>

<div role="tablist" class="tabs tabs-bordered w-60 tabs-lg" id="gender-tabs-wrapper">
    <% genders_array.forEach((item, index) => { %>
        <a role="tab" class="tab <%= (index === 0) ? 'tab-active' : '' %>" id="<%= genders_array[index].name %>-tab">
            <%= genders_array[index].name === "male" ? "Men" : "Women" %>
        </a>
    <% }) %>
</div>

<div role="tablist" class="tabs tabs-bordered tabs-lg w-fit" id="category-tabs-wrapper">
    
</div>

<main id="main-wrapper">

</main>